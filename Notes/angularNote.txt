Angular
--------
--> Client side framework to create web applications.
--> "Angular" is a framework, which provides the following functionality in the browser.
    a) Able to manage UI in the browser
    b) Able to store some temporary values in the browser.
    c) Able to manage updates on the page.
    d) Able to send request to server and get response from the server

-What is framework?
    Framework works on the top of a language, which provides a built-in project model.
    Ex.      Angular        : JavaScript
             React          : JavaScript
             Spring         : JAVA
             ASP.NET MVC    : C#.Net
             Django         : Python
             etc.
 
    Framework acts as a mediator between "language" and developer.
     Developer  --> Angular  --> JavaScript

Framework Provide:
-------------------
@Component
class classname
{
    username;
    password;
    
    onLoginClick()
    {
       if(username==".." && password=="...")
       {
       }
       else
       {
       }
    }
}


Language Provide:
-----------------
class classname
{
   property;
    
   method()
   {
   }
}


Goals of Angular Framework:
-----------------------------
--> Separation of DOM manipulation from application logic.

How web application works?
-----------------------------



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ANGULAR 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                              -----------


==> Angular 8 with Free Typescript Demo :- 
--> What is Angular?
--> Where we use Angular?
--> What is TypeScript?
--> What is Framework?
--> Why Angular?


=> What is Angular?
---------------------
--> Client-side TypeScript Framework for  developing dynamic web-apps
Web -> Internet
App -> Application
(Webistes) Ex. www.gmail.com, www.fb.com, www.yahoo.com

Dynamic Apps:
---------------
(Data/Info in website changes w.r.t 3-parameter)
a) Time (News-Update)
b) Location (Weather-Report)
c) User (Gmail/Facebook)

Note:
AngularJS and Angular?
----------------------
--> AngularJS is JavaScript Framework
--> Angular is TypeScript Framework

--> AngularJS is not 1st version of Angular
--> Angular is separate Framework and not realted to AngularJS

--> JAVA (OOP)
--> .Net (OOP)
(OOP used to developing computer apps)

--> Latest version of Angular is 8 (may 28th, 2019)

For Developing any website, we use 3-tier Arch (Model):
--------------------------------------------------------
Client <-----------> Server <--------> Database


= Client (browser)
(Display a webpage)
= For developing a webpage in website, we use HTML/CSS/Javascript and other
  scripting libraries

Note:
HTML (display the data)
CSS  (stylish of data)
Javascript (Programming)


TypeScript (Superset of Javascript)
(better programming when compared to javascript)

=> Typescript :
= Typescript is superset of Javascript
= Developed by Microsoft
= It is strictly typed-language and supports
data-types/classes/interface/inheritance/modules/Lamda-functins
etc
= Advantage, "more programming capability" in HTML-webpage

NOTE:
Every browser (Google Chrome, Mozilla Firefox, Opera, Safari)
Browsers supports only HTML/CSS/Javascript
Typescript in Browser?
Transpilation (convert typescript into javascript)

***Less Coding with More functionality in Web-Pages***

=> Angular is a typescript framework?

= Framework means (Runtume-Library + Runtime Environment)
Library (Pre-defined Modules/Classes/Functions)
Environment (execute our live-coding as per development)

=> Angualr is an "application-plateform"
(multiple-technologies(UI) can be used for developing  dynamics
web-apps)

= It is developed by Google+supports MS Typescript

= Completely and Newly developed by same team of AJS(AngularJS)
= Main use to develop SPA(Single Page Application)
(Ex: www.gmail.com)

=> Pre-requisites for Angular?
= HTML
= CSS
= Javascript/Typescript


==> AJS v/s Angular
= Performance 5-times better
= Cross plateform (PC/Laptop/Mobiles/Tabs etc)
= Easy to implement
= More features of Typescript comapared to Javascript
(OOP like features)


==> Building block of Angular:
= Component (Everything is webpage is a component)
= Modules (Grouping  of related coding)
= Templates (views by HTML/CSS)
= Decorators (Extra information to Angular framework)
= Services (Reusable coding in Angular)

==> Advantage of Angualr than AJS?
= It is not upgrade from AJS
= Completely re-witten in Typescript for dynamic web-apps development
= Component based development (future of web-app dev)
= More language choice,
   Ex: Typescript
       Dart
       Purescript
       Elm
       etc
= Angular itself is written in typescript

= Angular product is from (Google + Microsoft)


=> What is typescript?
= Free open-source developed by microsoft
= Super script of Javascript
= Transpilation compiles/converts Typescript into Javascript
(Browser understand Javascript only)
= Strongly typed language (data-types)


=====> Typescript :-
= Typescript allows us write Javascript as per our requirements
(Programming in a webpage)
(HTML+CSS does not have programming capability)

= Typescript is a typed-superset of Javascript

= Typescript provides Object-Oriented concepts like
classes,interfaces etc.
(like Java, .Net Programming Language)


== (OOP concept - Abstraction, Encapsulation, Inheritance, Polymorphism)


Note:
Every typescript is converted to javascript
(.ts  -----> .js)
Why this conversrion?
(Till today Browser understands only Javascripts)

=> Transpilation:-
It is the process of converitng typescript into javascript

Note:
Before Angualr is executed for user in browser, in server-only .ts is 
converted to .js

==>> Other Scripting 
= Dart
= Elm
= PureScript
= CoffeeScript
= ClojureScript
= Scala.js
= Reason (by FaceBook)
= Haxe
= Nim

Note:
= Angular Framework in written in TypeScript
= TypeScript allows us to write both client and server-side scripts
= Advantage is, Building web-applications Quick and fast

=> Prerequisites for TypeScript:::
= Javascript
= OOP concepts of PL

===>>> Introduction and History of Typescript:-
= Javascript is a client-side scripting  language for programming in HTML
webpage
= Node.js is server side scripting language
= In Enterprise-Applicaiton, Javascript is complex and difficult to  maintain
= Typescript is best alternative for this with features like OO, Type-checking etx.

=> Definition:::
Typescript is javascript for developing Web-Application, it is OO,
compiled language and typed language

=> History::::
= It was invented by  Anders Hejlsberg, at Microsoft (1996)
= It is superset of Javascript
= Typescript is (Javascript + Additional Features)

==> Features of Typescript::::
1) Typescript is Javascript (converted)
2) Support for javascript libraries
3) Javascript to Typescript (.js to .ts)
4) Portable (Browser, OS, Devices)
5) OO Scripting Language (OOP Features)
6) Classese and Modules
7) Typed Scripting Language (Datatypes)
8) Generic and Type-Annotaions


==> Advantage of Typescript::::(Why Typescript?)
1) Compiled Scripting LAng. (Compiler, Erros) - (Transpiler)
2) Typed Scripting Lang. (Datatypes)
3) Support Other Javascript Librearies
4) Supports OOP like classes, inheriteance, Interfaces, etc.

===> How to Setup Environment for Typescript:::
1) In Windows OS::::
= Typescript is open-source technology (free-of-cost)
= It can run on any Browser, any OS, any devices and also on any
server-machine (Java/.Net/Python/PHP servers)

===> Software/Tools Requirements are,
 A) Text Editor (Notepad, Edit-plus, Notepad++, Emacs, Vi or Vim)
    // File Extenstions are ".ts"

 B) Typescript-Compiler
     // Converts ".ts" file into ".js" file
     (process is known as Transpilation)
     // It is also known as "Transcomipler/Transpiler" (.ts or .d.ts files) 
 
 C) Node.js (Cross plateform Server-Side RunTIme Environment for JS)
 
   // Runs Javascript wothout browser
      (https://node.js.org/en/download/)
   // Install and verify it by opening Commond-Prompt and type the
      following commond (node -v)  & check the version 
   //*** Now install Typescript in CMD by using the follwing the commond
     (npm install -g typescript)
   //*** Verify it by typing the following commond (tsc (or) tsc -v)


=================
= How to work with typescript programs?
= How to install node js & npm
= How to install typescript
= How to work with notepad++ & Visual Studio Code IDE
= Basic commonds in typescript


=> How to install node JS?
= Node JS provide RT environment for angular 8
= RT Environment means we can execute Angular program on Node JS
= Node JS is used to run javascript of typescript program (without any browser)

=> How to install Node JS?
= Goto (www.nodejs.org) and download latest version of Node JS for windows 64 bit OS
= Install the nodejd
= After installation verify it in command prompt
cmd> node -v

= Along with nodejs, npm is also installed
(NPM -> Node package Manager)

= NPM allows us to download & install open-source javascript libraries in
our system (integrated with nodejs)

= How to verify npm?
cmd> npm -v

= Finally, typescript in our system(it is integrated with nodejs only)

cmd>npm install -g typescript
(-g indicates global installation i.e, typescript is available to all
users of the system)

= verify typescript?
cmd>tsc -v

=> Editors for typescript programming:-
1) Notepad++
2) Visual Studio Code IDE (Angular-also)


=> Working with first program
1) Open VS Code, take new page
2) Type your typescript program
3) Save the program with .ts as extension 
Ex. 
   Welcome.ts
4) Open terminal in VS Code (from View Menu)

5) Goto working directory
(D:/AngualrOnlineSession\Typescripe\Program)

6) Compile .ts file
cmd> tsc Welcome.ts
(on succesful compilaiton, .js file is created)

7) Run .js file
cmd> node Welcome.js

8) Verify output of your program
(without any browser)


===========================
= Flow of Execution of Typescript program
= .ts file & .js file
= Basic & Fundamental of typescript
= Steps for writing & execution typescript program
= Indentifiers & 6-Rules
= Keywords in typescript
= Comments intypescript
= OOP in typescript


===> Flow of Execution of Typescript program
= Diagram

.ts file :-
= It is extension for typescript file

.js File:-
= It is extension for javascript file

Note:
Compiling (Transliling) is done by "Transpiler"
(a small piece of software)
(.ts ----> .js file)


.js file is Run by NodeJS to give output
(without any browser)

Node JS provides Runtime Environment for executing typescript program


==> Basic & Fundamental of typescript:-
= In typescript, we have below entities(items/units),
   = Comments
   = Statements & Expressions
   = Variables
   = Modules

//Program
(Display Welcome Msg)


==> Steps for Writing, Compiling and executing typescript programs :::-
Step1 : Open VS code IDE and type your program and save the program with
        .ts as extenstsion
Step2 : Open the commond prompt or terminal

Step3 : Use the forllowing commond for compiling
        [tsc Demo1.ts]
        //On successful compilation, we get "Demo1.js" file

Step4 : To run, use the following commond
        [node Demo1.js]

Note::: (Compiling multiple-files at a time)
       [ tsc demo1.ts, demo2.ts, demo3.ts]
      (tsc - typescript-compiler commond (Transpiler))

==> Identifiers in typescript :-
= Identifying something uniquely in a typescript program are known as 
  identifiers. They are as follows,
    - variables
    - funtions
    - classes
    - construtors
    - modules etc.

==> 6-Rules are as follows,
    i) Begins only with alphbets
   ii) No special characters except _ or $
  iii) No keywords as idnetifiers
   iv) Should be unique
    v) They are case-sensitive
   vi) No Spaces in between and use digits at the last

==> Typescripr Keywords ::::::
= Keywords are special words or reserved words with special
  meaning and usage in a program. They are as follows,

break		as		any		switch
case 		if		throw		else
var		number		string		get		
module		type		instanceof	typeof
public		private		enum		export
finally		for		while		void	
null		super		this		false
in		return		true		catch
package 	extends		static		let
new 		implements	interface	functions
continue	try		yield		const
do

Note:
1) Whitespaces and line-breaks are ignored while compilation
2) Case-sensitive language
3) Semicolans are opetional (use for multiple-stmts in single line)


==> console.log("....";
console means output-streams or commond-prompt or shell
log (display or put on console)

==> Comments in Typescript::::-
= Provide description of a program.
= They are ignored by compiler
  a) Single-line comment (//........)
  b) Multi-line comment (/*.........*/)

Advantage,
= Easy understanding of program


==> Object Orientd programming in Typescript:-
= Typescript is OOP
= OOP is based on Reel-Life situations
= Program with collection of objects and its methods
= Typescript supports the following,
  1) Objects
   (EndProduct used by end-user, it has state-behavior-identity)
  Ex: Mobile-Phone
      state -> Features
      behavior -> Usage (Calling/SMS/Internet)
      identity -> apple iPhone-X  

  2) Classes 
     (Model/Prototype/Blueprint before creating an actual object)
     Ex: House-Construction (Blueprint)

  3) Methods
     (Behavior of object i.e, funtionality/usage of end-product)
     
     
     
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

==> Introduction to Angular:::::
= Angular is a Typescript Framework for developing dynamic web-applications

Note:
Web-applications (Websites)
Ex:
  www.fb.com

= Dynamic here means data in websites changes wrt to 3-things
a) Time (News-Update) Ex. Google-News
b) Location (Weather-Report) Ex: Google-Weather 
c) User  (Email/Socail-Networking) Ex: Gmail, facebook

= To develop web-apps in Angular we require Typescript
(Scripting or programming in HTML webpages)

= HTML ( how to display data using <tags>)
= CSS (it makes HTML-data more stylish i.e colors,styles etc)
= Javascript/Typescript (used as programming in webpages)


= Framework (Runtime-Library + Runtime-Environment)
(Lib means Modules in Typescript)

= It uses HTML, CSS, Javascript and Typescript
= Angular is written in Typescript
= Typescript compiles to javascript and displays dynami information/data in browser

= Some Notable-Features in Angular are,
  a) HTTP Service
  b) Animaitons
  c) Materials etc
  d) Auto-complete
  e) Navigations
  f) Toolbars
  g) Menus
  h) Routings (SPA)
  i) Components
  j) Services

==> Pre_Requisites::
  a) HTML
  b) CSS
  c) Javascript
  d) Typescript
  e) DOM


==> History of Angular::::
= AngularJS in known as Angualr-1
  (Written in Javascript)-2009 (2012 by Google)
  (AJS is Javascript framework for developing web-apps)

Note:
(java v/s .net)
= Both of them has OOP
= Difference is programming syntaxes

= Angular-2 (Written in Typescript) - Sep 14, 2016
= Angular-3 (skipped)
= Angular-4 (March 23, 2017)
= Angular-5 (November 1, 2017)
= Angular-6 (May 4, 2018)
= Angular-7 (October 18, 2018)
= Angualr-8 (May 28,2019)

Note::
== All version are backward compatible and expected a new=version every 6 months
== In new-versions some old features would be deprecated(outdated) and added with new library

=> Angular(TS) is based on components and Services architecure.
wehereas Angular JS is based on MVC architecture.

=> Enhancements Angular-4/5/6/7/8::
= "if" is supported in angular-2 where as angular-4 onwards supports "if-else" also
= "as" keyword in for-loop from angular-4 onwards
= Animation package is separate
(@angular.animations beofr @angular/core)
= Condition based Animation disable feature
= use <ng-template> insted of <tamplate>
  (it is already available in HTML)
= From angular-4 onwards, we require typescript 2.2+
= Pipe titlecase Ex: {{ 'Welcome to angualr ' | titlecase}}
= http get api is simplified from angualr-4 onwards with HttpClient (URLSearchParams)
= Small and Fast apps

= Progressive Web apps from angular5 onwards
= Material design enhancments from angular5
= ngUpdate, ngAdd, RxJS-6 Enhancement from angular6
= App performacne, Virtual Scrolling from angular7
= Typescript 3.1, RxJS6.3, node10 support angular7
= Finally angular8, fast rebuild time, template type-checings, backward compatibility

=> Why Angular when compared to AJS?
1) 5 times faster
2) Modular Programming
3) Applicaiton Platform
4) Scripting language options
5) Unit Testable


==> Environment & Project setup for angular:-
=> Software Requiremnts
   = NodeJS (Latest)
   = npm (latest)
   = angualr cli 
   = ide for writing code

= Why IDE?
(Creating angular projects, compiling or building, running, verifying output)

Note:
= Teminal is nothing but comond prompt (VS code)

=> What NPM?
(Node Package Manager)
= It allows us to install open-source javascript librarires/packages into our angular
applicaiton using node development environment

=> What is angular cli?
(Commond Line Interface)
= Using commond we can create our project application files and folder in our system for 
development)

Note:
(Software Requirements for Angular)
1) VS Code
2) NodeJS
3) NPM (auto installed)
4) Angular CLI





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

=> Creating First applicaton in angular
cmd>ng new first-app (FirstAPP)
= ng new is  the commond
= Creates a new Angular app
= It create complete folder strucutre for our angular-app
= Angular-app folder structure is created in our working directory 

cmd> cd first-app(FirstAPP)
cmd\first-app(FirstApp)>ng serve
